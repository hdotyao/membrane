/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

T
{
    internalField   uniform 300;

    boundaryField
    {
        wall
        {
            type            fixedValue;
            value           uniform 300;
        }

        "tubes_to_.*"
        {
            type            fixedValue;
            value           uniform 300;
        }

        "inlet|outlet"
        {
            type            zeroGradient;
        }
        
        upAndDown
        {
            type empty;
        }
    }
}

U
{
    internalField   uniform (0 0 0);

    boundaryField
    {
        inlet//counter current mode is outlet
        {
            type            zeroGradient;
        }
        
        outlet//counter current mode is inlet
        {
            type            fixedValue;
            value           uniform ( 0 0 0.1 );
        }
        
        wall
        {
            type            fixedValue;
            value           uniform ( 0 0 0 );
        }

        "tubes_to_.*"
        {
            type            fixedValue;
            value           uniform ( 0 0 0 );
        }
        
        upAndDown
        {
            type empty;
        }
    }
}

p_rgh
{
    internalField   uniform 1e5;

    boundaryField
    {
        inlet
        {
            type            fixedFluxPressure;
            value           uniform 1e5;
        }
        
        outlet
        {
            type            fixedFluxPressure;
            value           uniform 1e5;
        }
        
        wall
        {
            type            fixedFluxPressure;
            value           uniform 1e5;
        }

        "tubes_to_.*"
        {
            type            fixedFluxPressure;
            value           uniform 1e5;
        }
        
        upAndDown
        {
            type empty;
        }
    }
}

p
{
    internalField   uniform 1e6;

    boundaryField
    {
        inlet
        {
            type            calculated;
            value           uniform 1e6;
        }
        
        outlet
        {
            type            calculated;
            value           uniform 1e6;
        }
        
        wall
        {
            type            calculated;
            value           uniform 1e6;
        }
        
        "tubes_to_.*"
        {
            type            calculated;
            value           uniform 1e6;
        }
        
        upAndDown
        {
            type empty;
        }
    }
}

CO2
{
    internalField   uniform 0.5;

    boundaryField
    {
        inlet//counter current mode is outlet
        {
            type            zeroGradient;
            //inletValue      uniform 0;
            //value           uniform 0;
        }

        outlet//counter current mode is inlet
        {
            type            fixedValue;
            value           uniform 0.5;

        }

        wall
        {
            type            zeroGradient;
            //value           uniform 0;
        }
        
        "tubes_to_.*"
        {
            type            zeroGradient;
            //value           uniform 0;
        }
        
        upAndDown
        {
            type empty;
        }
    }
}

CH4
{
    internalField   uniform 0.5;

    boundaryField
    {
        inlet//counter current mode is outlet
        {
            type            zeroGradient;
           // inletValue      uniform 0;
            //value           uniform 0;
        }

        outlet//counter current mode is inlet
        {
            type            fixedValue;
            value           uniform 0.5;

        }

        wall
        {
            type            zeroGradient;
            //value           uniform 0;
        }
        
        "tubes_to_.*"
        {
            type            zeroGradient;
            //value           uniform 0;
        }
        
        upAndDown
        {
            type empty;
        }
    }
}

// ************************************************************************* //
